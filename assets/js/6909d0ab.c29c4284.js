"use strict";(self.webpackChunkneutron=self.webpackChunkneutron||[]).push([[66684],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},k=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(n),k=i,m=u["".concat(s,".").concat(k)]||u[k]||d[k]||a;return n?r.createElement(m,o(o({ref:t},c),{},{components:n})):r.createElement(m,o({ref:t},c))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=k;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:i,o[1]=l;for(var p=2;p<a;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}k.displayName="MDXCreateElement"},20519:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var r=n(87462),i=(n(67294),n(3905));const a={},o="Overview",l={unversionedId:"neutron/modules/3rdparty/skip/slinky/overview",id:"neutron/modules/3rdparty/skip/slinky/overview",title:"Overview",description:"Slinky is a revolutionary enshrined oracle built for the highest performance DeFi. It leverages Neutron chain security to provide guaranteed per-block price updates with millisecond refresh rates.",source:"@site/docs/neutron/modules/3rdparty/skip/slinky/overview.md",sourceDirName:"neutron/modules/3rdparty/skip/slinky",slug:"/neutron/modules/3rdparty/skip/slinky/overview",permalink:"/neutron/modules/3rdparty/skip/slinky/overview",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Overview",permalink:"/neutron/modules/3rdparty/skip/block-sdk/overview"},next:{title:"Overview",permalink:"/neutron/modules/3rdparty/skip/feemarket/overview"}},s={},p=[{value:"F.A.Q",id:"faq",level:2},{value:"I&#39;m a validator, how should i run Slinky&#39;s Sidecar?",id:"im-a-validator-how-should-i-run-slinkys-sidecar",level:3},{value:"How can i access prices from the Slinky?",id:"how-can-i-access-prices-from-the-slinky",level:3},{value:"Getting Supported Assets",id:"getting-supported-assets",level:4},{value:"Accessing Slinky Prices over node APIs and RPC",id:"accessing-slinky-prices-over-node-apis-and-rpc",level:4},{value:"Price Metadata within Slinky",id:"price-metadata-within-slinky",level:4},{value:"Slinky Price Update Timing",id:"slinky-price-update-timing",level:4},{value:"Q: Can I get historical prices in Slinky?",id:"q-can-i-get-historical-prices-in-slinky",level:4}],c={toc:p},u="wrapper";function d(e){let{components:t,...n}=e;return(0,i.kt)(u,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"overview"},"Overview"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Slinky")," is a revolutionary enshrined oracle built for the highest performance DeFi. It leverages Neutron chain security to provide guaranteed per-block price updates with millisecond refresh rates."),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},(0,i.kt)("strong",{parentName:"p"},"Note:")," you can find more info about Slinky and how it works in the official Skip's Slinky docs: ",(0,i.kt)("a",{parentName:"p",href:"https://docs.skip.money/slinky/overview"},"https://docs.skip.money/slinky/overview"))),(0,i.kt)("h2",{id:"faq"},"F.A.Q"),(0,i.kt)("h3",{id:"im-a-validator-how-should-i-run-slinkys-sidecar"},"I'm a validator, how should i run Slinky's Sidecar?"),(0,i.kt)("p",null,"Please use ",(0,i.kt)("a",{parentName:"p",href:"https://docs.skip.build/connect/validators/quickstart"},"the official")," Slinky's documentation how to get the Sidecar up and running."),(0,i.kt)("h3",{id:"how-can-i-access-prices-from-the-slinky"},"How can i access prices from the Slinky?"),(0,i.kt)("p",null,"Slinky prices are stored within the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/skip-mev/slinky/tree/main/x/oracle"},(0,i.kt)("inlineCode",{parentName:"a"},"x/oracle"))," module by default."),(0,i.kt)("p",null,"These prices are updated on a per-block basis, when there is sufficient difference from the last block's price. They can be accessed natively by ",(0,i.kt)("a",{parentName:"p",href:"TODO:link_to_the_tutorials"},"CosmWasm smart contracts"),", by other modules, or by anyone else who has access to chain state."),(0,i.kt)("p",null,"Slinky market configuration is stored in the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/skip-mev/slinky/tree/main/x/marketmap"},(0,i.kt)("inlineCode",{parentName:"a"},"x/marketmap")),". This module, unlike ",(0,i.kt)("inlineCode",{parentName:"p"},"x/oracle"),", does ",(0,i.kt)("strong",{parentName:"p"},"not")," store price data. Instead, it stores which currency pairs are supported and how they are configured."),(0,i.kt)("h4",{id:"getting-supported-assets"},"Getting Supported Assets"),(0,i.kt)("p",null,"You can find out which assets are supported on Neutron by either running:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"(via a local running chain): ",(0,i.kt)("inlineCode",{parentName:"li"},"curl http://<NEUTRON_REST_NODE_ADDRESS>:1317/slinky/marketmap/v1/marketmap")),(0,i.kt)("li",{parentName:"ol"},"(via chain app CLI): ",(0,i.kt)("inlineCode",{parentName:"li"},"neutrond q marketmap marketmap")),(0,i.kt)("li",{parentName:"ol"},"(via gRPC): ",(0,i.kt)("inlineCode",{parentName:"li"},"grpcurl -plaintext <NEUTRON_GRPC_NODE_ADDRESS>:9090 slinky.marketmap.v1.Query/MarketMap"))),(0,i.kt)("p",null,"This will return a JSON list of supported assets with associated metadata."),(0,i.kt)("h4",{id:"accessing-slinky-prices-over-node-apis-and-rpc"},"Accessing Slinky Prices over node APIs and RPC"),(0,i.kt)("p",null,"To access ",(0,i.kt)("strong",{parentName:"p"},"all")," Slinky prices (as of the last committed block), you can run:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"(via a local running chain): ",(0,i.kt)("inlineCode",{parentName:"li"},"curl http://<NEUTRON_REST_NODE_ADDRESS>:1317/slinky/oracle/v1/get_prices?currency_pair_ids=ADA%2FUSD&currency_pair_ids=ADA%2FUSD")),(0,i.kt)("li",{parentName:"ol"},"(via gRPC): ",(0,i.kt)("inlineCode",{parentName:"li"},"grpcurl -plaintext <NEUTRON_GRPC_NODE_ADDRESS>:9090 slinky.oracle.v1.Query/GetPrices"))),(0,i.kt)("p",null,"To get a ",(0,i.kt)("strong",{parentName:"p"},"specific")," currency pair, you can call:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"(Get all currency pairs request) ",(0,i.kt)("inlineCode",{parentName:"li"},"neutrond q oracle currency-pairs")),(0,i.kt)("li",{parentName:"ol"},"(Get price request) ",(0,i.kt)("inlineCode",{parentName:"li"},"neutrond q oracle price [base] [quote]"))),(0,i.kt)("h4",{id:"price-metadata-within-slinky"},"Price Metadata within Slinky"),(0,i.kt)("p",null,"When calling ",(0,i.kt)("inlineCode",{parentName:"p"},"getPrices")," via the above methods, you are returned an array of ",(0,i.kt)("inlineCode",{parentName:"p"},"GetPriceResponse"),", each of which contains the following metadata about individual prices:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"QuotePrice")),(0,i.kt)("li",{parentName:"ol"},"nonce"),(0,i.kt)("li",{parentName:"ol"},"decimals"),(0,i.kt)("li",{parentName:"ol"},"ID")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"GetPriceResponse")," looks like this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"    // GetPriceResponse is the response from the GetPrice grpc method exposed from\n    // the x/oracle query service.\n\n    message GetPriceResponse {\n        // QuotePrice represents the quote-price for the CurrencyPair given in\n        // GetPriceRequest (possibly nil if no update has been made)\n        QuotePrice price = 1 [ (gogoproto.nullable) = true ];\n        // nonce represents the nonce for the CurrencyPair if it exists in state\n        uint64 nonce = 2;\n        // decimals represents the number of decimals that the quote-price is\n        // represented in. For Pairs where ETHEREUM is the quote this will be 18,\n        // otherwise it will be 8.\n        uint64 decimals = 3;\n        // ID represents the identifier for the CurrencyPair.\n        uint64 id = 4;\n    }\n")),(0,i.kt)("p",null,"Inside ",(0,i.kt)("inlineCode",{parentName:"p"},"QuotePrice"),", you can fetch for the currency-pair:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"price"),(0,i.kt)("li",{parentName:"ol"},"timestamp of last update"),(0,i.kt)("li",{parentName:"ol"},"blockheight of last update")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"QuotePrice")," looks like this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'    // QuotePrice is the representation of the aggregated prices for a CurrencyPair,\n    // where price represents the price of Base in terms of Quote\n    message QuotePrice {\n    string price = 1 [\n        (cosmos_proto.scalar) = "cosmos.Int",\n        (gogoproto.customtype) = "cosmossdk.io/math.Int",\n        (gogoproto.nullable) = false\n    ];\n\n    // BlockTimestamp tracks the block height associated with this price update.\n    // We include block timestamp alongside the price to ensure that smart\n    // contracts and applications are not utilizing stale oracle prices\n    google.protobuf.Timestamp block_timestamp = 2\n        [ (gogoproto.nullable) = false, (gogoproto.stdtime) = true ];\n\n    // BlockHeight is height of block mentioned above\n    uint64 block_height = 3;\n    }\n')),(0,i.kt)("h4",{id:"slinky-price-update-timing"},"Slinky Price Update Timing"),(0,i.kt)("p",null,"Prices within Slinky committed on a one-block delay, since validators use the vote extensions from block ",(0,i.kt)("inlineCode",{parentName:"p"},"n-1")," to securely submit their price data for block ",(0,i.kt)("inlineCode",{parentName:"p"},"n"),"."),(0,i.kt)("p",null,"Most of the time, Slinky feeds will update every single block. This happens when there is a non-insignificant update to the price, and over 66% of validators are correctly running their price-fetching sidecar."),(0,i.kt)("p",null,"However, an individual Slinky feed will not update on any given block if:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"(More common) There was not a sufficient enough change from last block's price to surpass the Slinky ",(0,i.kt)("inlineCode",{parentName:"li"},"min_price_change")," parameter. To save network bandwidth, the price won't update."),(0,i.kt)("li",{parentName:"ol"},"(Less common) The market is disabled (i.e. not updating) within ",(0,i.kt)("inlineCode",{parentName:"li"},"x/marketmap")),(0,i.kt)("li",{parentName:"ol"},"(Less common) Less than 2/3s of validators (by stake weight) contributed to a price update. This can happen if not enough validators run the Slinky sidecar, or there is a massive, widespread outage across providers.")),(0,i.kt)("h4",{id:"q-can-i-get-historical-prices-in-slinky"},"Q: Can I get historical prices in Slinky?"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"A:")," No, the ",(0,i.kt)("inlineCode",{parentName:"p"},"x/oracle")," module only stores the most recently posted price. However, you can use blockchain indexers or inspect past blocks to see the prices committed on previous heights."))}d.isMDXComponent=!0}}]);