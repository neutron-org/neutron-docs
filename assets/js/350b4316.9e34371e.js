"use strict";(self.webpackChunkneutron=self.webpackChunkneutron||[]).push([[69696],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>g});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},m="mdxType",k={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),m=p(n),d=a,g=m["".concat(s,".").concat(d)]||m[d]||k[d]||o;return n?r.createElement(g,l(l({ref:t},u),{},{components:n})):r.createElement(g,l({ref:t},u))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[m]="string"==typeof e?e:a,l[1]=i;for(var p=2;p<o;p++)l[p]=n[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},886:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>k,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var r=n(87462),a=(n(67294),n(3905));const o={},l="Client",i={unversionedId:"neutron/modules/dex/client",id:"version-3.0/neutron/modules/dex/client",title:"Client",description:"Queries",source:"@site/versioned_docs/version-3.0/neutron/modules/dex/client.md",sourceDirName:"neutron/modules/dex",slug:"/neutron/modules/dex/client",permalink:"/3.0/neutron/modules/dex/client",draft:!1,tags:[],version:"3.0",frontMatter:{},sidebar:"docs",previous:{title:"Messages",permalink:"/3.0/neutron/modules/dex/messages"},next:{title:"Overview",permalink:"/3.0/neutron/modules/transfer/overview"}},s={},p=[{value:"Queries",id:"queries",level:2},{value:"Params",id:"params",level:3},{value:"LimitOrderTrancheUser",id:"limitordertrancheuser",level:3},{value:"LimitOrderTrancheUserAll",id:"limitordertrancheuserall",level:3},{value:"LimitOrderTranche",id:"limitordertranche",level:3},{value:"LimitOrderTrancheAll",id:"limitordertrancheall",level:3},{value:"UserDepositsAll",id:"userdepositsall",level:3},{value:"LimitOrderTrancheUserAllByAddress",id:"limitordertrancheuserallbyaddress",level:3},{value:"TickLiquidityAll",id:"tickliquidityall",level:3},{value:"InactiveLimitOrderTranche",id:"inactivelimitordertranche",level:3},{value:"InactiveLimitOrderTrancheAll",id:"inactivelimitordertrancheall",level:3},{value:"PoolReservesAll",id:"poolreservesall",level:3},{value:"PoolReserves",id:"poolreserves",level:3},{value:"QueryEstimateMultiHopSwap",id:"queryestimatemultihopswap",level:3},{value:"EstimatePlaceLimitOrder",id:"estimateplacelimitorder",level:3},{value:"PoolRequest",id:"poolrequest",level:3},{value:"PoolRequestByID",id:"poolrequestbyid",level:3},{value:"GetPoolMetadata",id:"getpoolmetadata",level:3},{value:"GetALLPoolMetadata",id:"getallpoolmetadata",level:3}],u={toc:p},m="wrapper";function k(e){let{components:t,...n}=e;return(0,a.kt)(m,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"client"},"Client"),(0,a.kt)("h2",{id:"queries"},"Queries"),(0,a.kt)("h3",{id:"params"},"Params"),(0,a.kt)("p",null,"Queries the parameters of the module."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'GET "/dex/params"\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Proto Messages")),(0,a.kt)("p",null,"Request:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-protobuf"},"message QueryParamsRequest {}\n")),(0,a.kt)("p",null,"Response:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-protobuf"},"message QueryParamsResponse {\n\n// params holds all the parameters of this module.\nParams params = 1 [(gogoproto.nullable) = false];\n}\n")),(0,a.kt)("p",null,"Curl Command (testnet):"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"curl https://rest-falcron.pion-1.ntrn.tech/neutron/dex/params\n")),(0,a.kt)("h3",{id:"limitordertrancheuser"},"LimitOrderTrancheUser"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'GET "/dex/limit_order_tranche_user/{address}/{tranche_key}"\n')),(0,a.kt)("p",null,"This query retrieves a ",(0,a.kt)("inlineCode",{parentName:"p"},"LimitOrderTrancheUser")," by user address and TrancheKey."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Proto Messages")),(0,a.kt)("p",null,"Request:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-protobuf"},"message QueryGetLimitOrderTrancheUserRequest {\n  string address = 1;\n  string tranche_key = 2;\n}\n")),(0,a.kt)("p",null,"Response:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-protobuf"},'message QueryGetLimitOrderTrancheUserResponse {\n  LimitOrderTrancheUser limit_order_tranche_user = 1 [(gogoproto.nullable) = true];\n}\n\nmessage LimitOrderTrancheUser {\n  TradePairID trade_pair_id = 1;\n  int64 tick_index_taker_to_maker = 2;\n  string tranche_key = 3;\n  string address = 4;\n  string shares_owned = 5 [\n    (gogoproto.moretags) = "yaml:\\"shares_owned\\"",\n    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",\n    (gogoproto.nullable) = false,\n    (gogoproto.jsontag) = "shares_owned"\n  ];\n  string shares_withdrawn = 6 [\n    (gogoproto.moretags) = "yaml:\\"shares_withdrawn\\"",\n    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",\n    (gogoproto.nullable) = false,\n    (gogoproto.jsontag) = "shares_withdrawn"\n  ];\n  string shares_cancelled = 7 [\n    (gogoproto.moretags) = "yaml:\\"shares_cancelled\\"",\n    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",\n    (gogoproto.nullable) = false,\n    (gogoproto.jsontag) = "shares_cancelled"\n  ];\n  LimitOrderType order_type = 8;\n}\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Arguments")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"QueryGetLimitOrderTrancheUserRequest"),": Request message for the ",(0,a.kt)("inlineCode",{parentName:"li"},"LimitOrderTrancheUser")," query.",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"address")," (string): The user address."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"tranche_key")," (string): The tranche key.")))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Sample Query")),(0,a.kt)("p",null,"Curl Command (testnet):"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"curl https://rest-falcron.pion-1.ntrn.tech/neutron/dex/limit_order_tranche_user/{address}/{tranche_key}\n")),(0,a.kt)("h3",{id:"limitordertrancheuserall"},"LimitOrderTrancheUserAll"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'GET "/dex/Neutron DEX/dex/limit_order_tranche_user"\n')),(0,a.kt)("p",null,"This query retrieves a list of ",(0,a.kt)("inlineCode",{parentName:"p"},"LimitOrderTrancheUser")," items."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Proto Messages")),(0,a.kt)("p",null,"Request:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-protobuf"},"message QueryAllLimitOrderTrancheUserRequest {\n  cosmos.base.query.v1beta1.PageRequest pagination = 1;\n}\n")),(0,a.kt)("p",null,"Response:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-protobuf"},"message QueryAllLimitOrderTrancheUserResponse {\n  repeated LimitOrderTrancheUser limit_order_tranche_user = 1 [(gogoproto.nullable) = true];\n  cosmos.base.query.v1beta1.PageResponse pagination = 2;\n}\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Arguments")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"QueryAllLimitOrderTrancheUserRequest"),": Request message for the ",(0,a.kt)("inlineCode",{parentName:"li"},"LimitOrderTrancheUserAll")," query.",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"pagination")," (cosmos.base.query.v1beta1.PageRequest): Pagination options.")))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Sample Query")),(0,a.kt)("p",null,"Curl Command (testnet):"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"curl https://rest-falcron.pion-1.ntrn.tech/dex/limit_order_tranche_user\n")),(0,a.kt)("h3",{id:"limitordertranche"},"LimitOrderTranche"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'GET "/dex/limit_order_tranche/{pairID}/{tokenIn}/{tickIndex}/{trancheKey}"\n')),(0,a.kt)("p",null,"This query retrieves a ",(0,a.kt)("inlineCode",{parentName:"p"},"LimitOrderTranche")," by a tranche's key (pairID + tokenIn + tickIndex + trancheKey)."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Proto Messages")),(0,a.kt)("p",null,"Request:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-protobuf"},"message QueryGetLimitOrderTrancheRequest {\n  string pair_id = 1;\n  int64 tick_index = 2;\n  string token_in = 3;\n  string tranche_key = 4;\n}\n")),(0,a.kt)("p",null,"Response:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-protobuf"},'message QueryGetLimitOrderTrancheResponse {\n  LimitOrderTranche limit_order_tranche = 1 [(gogoproto.nullable) = true];\n}\n\nmessage LimitOrderTrancheKey {\n  TradePairID trade_pair_id = 1;\n  int64 tick_index_taker_to_maker = 2;\n  string tranche_key = 3;\n}\n\nmessage LimitOrderTranche {\n  LimitOrderTrancheKey key = 1;\n  string reserves_maker_denom = 2 [\n    (gogoproto.moretags) = "yaml:\\"reserves_maker_denom\\"",\n    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",\n    (gogoproto.nullable) = false,\n    (gogoproto.jsontag) = "reserves_maker_denom"\n  ];\n  string reserves_taker_denom = 3 [\n    (gogoproto.moretags) = "yaml:\\"reserves_taker_denom\\"",\n    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",\n    (gogoproto.nullable) = false,\n    (gogoproto.jsontag) = "reserves_taker_denom"\n  ];\n  string total_maker_denom = 4 [\n    (gogoproto.moretags) = "yaml:\\"total_maker_denom\\"",\n    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",\n    (gogoproto.nullable) = false,\n    (gogoproto.jsontag) = "total_maker_denom"\n  ];\n  string total_taker_denom = 5 [\n    (gogoproto.moretags) = "yaml:\\"total_taker_denom\\"",\n    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",\n    (gogoproto.nullable) = false,\n    (gogoproto.jsontag) = "total_taker_denom"\n  ];\n  // expiration_time is represented as an RFC 3339 formatted date.\n  // LimitOrders with expiration_time set are valid as long as blockTime <= expiration_time.\n  // JIT orders also use expiration_time to handle deletion, but represent a special case.\n  // All JIT orders have an expiration_time of 0001-01-01T00:00:00Z, and an exception is made to\n  // still treat these orders as live. Order deletion still functions the\n  // same, and the orders will be deleted at the end of the block.\n  google.protobuf.Timestamp expiration_time = 6 [\n    (gogoproto.stdtime) = true,\n    (gogoproto.nullable) = true\n  ];\n  string price_taker_to_maker = 7 [\n    (gogoproto.moretags) = "yaml:\\"price_taker_to_maker\\"",\n    (gogoproto.customtype) = "github.com/neutron-org/neutron/v2/utils/math.PrecDec",\n    (gogoproto.nullable) = false,\n    (gogoproto.jsontag) = "price_taker_to_maker"\n  ];\n}\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Arguments")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"QueryGetLimitOrderTrancheRequest"),": Request message for the ",(0,a.kt)("inlineCode",{parentName:"li"},"LimitOrderTranche")," query.",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"pairID")," (string): The pair ID."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"tickIndex")," (int64): The tick index."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"tokenIn")," (string): The input token."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"trancheKey")," (string): The tranche key.")))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Sample Query")),(0,a.kt)("p",null,"Curl Command (testnet):"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"curl https://rest-falcron.pion-1.ntrn.tech/neutron/dex/limit_order_tranche/{pairID}/{tokenIn}/{tickIndex}/{trancheKey}\n")),(0,a.kt)("h3",{id:"limitordertrancheall"},"LimitOrderTrancheAll"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'GET "dex/limit_order_tranche/{pairID}/{tokenIn}"\n')),(0,a.kt)("p",null,"This query retrieves a list of ",(0,a.kt)("inlineCode",{parentName:"p"},"LimitOrderTranche")," items for a given pairID / TokenIn combination."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Proto Messages")),(0,a.kt)("p",null,"Request:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-protobuf"},"message QueryAllLimitOrderTrancheRequest {\n  string pair_id = 1;\n  string token_in = 2;\n  cosmos.base.query.v1beta1.PageRequest pagination = 3;\n}\n")),(0,a.kt)("p",null,"Response:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-protobuf"},"message QueryAllLimitOrderTrancheResponse {\n  repeated LimitOrderTranche limit_order_tranche = 1 [(gogoproto.nullable) = true];\n  cosmos.base.query.v1beta1.PageResponse pagination = 2;\n}\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Arguments")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"QueryAllLimitOrderTrancheRequest"),": Request message for the ",(0,a.kt)("inlineCode",{parentName:"li"},"LimitOrderTrancheAll")," query.",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"pairID")," (string): The pair ID."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"tokenIn")," (string): The input token."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"pagination")," (cosmos.base.query.v1beta1.PageRequest): Pagination options.")))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Sample Query")),(0,a.kt)("p",null,"Curl Command (testnet):"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"curl https://rest-falcron.pion-1.ntrn.tech/neutron/dex/limit_order_tranche/{pairID}/{tokenIn}\n")),(0,a.kt)("h3",{id:"userdepositsall"},"UserDepositsAll"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'GET "/dex/user/deposits/{address}"\n')),(0,a.kt)("p",null,"This query retrieves a list of ",(0,a.kt)("inlineCode",{parentName:"p"},"DepositRecord")," items by user address."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Proto Messages")),(0,a.kt)("p",null,"Request:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-protobuf"},"message QueryAllUserDepositsRequest {\n  string address = 1;\n  cosmos.base.query.v1beta1.PageRequest pagination = 2;\n}\n")),(0,a.kt)("p",null,"Response:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-protobuf"},"message QueryAllUserDepositsResponse {\n  repeated DepositRecord deposits = 1 [(gogoproto.nullable) = true];\n  cosmos.base.query.v1beta1.PageResponse pagination = 2;\n}\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Arguments")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"QueryAllUserDepositsRequest"),": Request message for the ",(0,a.kt)("inlineCode",{parentName:"li"},"UserDepositsAll")," query.",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"address")," (string): The user address."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"pagination")," (cosmos.base.query.v1beta1.PageRequest): Pagination options.")))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Sample Query")),(0,a.kt)("p",null,"Curl Command (testnet):"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"curl https://rest-falcron.pion-1.ntrn.tech/neutron/dex/user/deposits/{address}\n")),(0,a.kt)("h3",{id:"limitordertrancheuserallbyaddress"},"LimitOrderTrancheUserAllByAddress"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'GET "/neutron/dex/user/limit_orders/{address}"\n')),(0,a.kt)("p",null,"This query retrieves a list of ",(0,a.kt)("inlineCode",{parentName:"p"},"LimitOrderTrancheUser")," items by user address."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Proto Messages")),(0,a.kt)("p",null,"Request:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-protobuf"},"message QueryAllUserLimitOrdersRequest {\n  string address = 1;\n  cosmos.base.query.v1beta1.PageRequest pagination = 2;\n}\n")),(0,a.kt)("p",null,"Response:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-protobuf"},"message QueryAllUserLimitOrdersResponse {\n  repeated LimitOrderTrancheUser limit_orders = 1 [(gogoproto.nullable) = true];\n  cosmos.base.query.v1beta1.PageResponse pagination = 2;\n}\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Arguments")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"QueryAllUserLimitOrdersRequest"),": Request message for the ",(0,a.kt)("inlineCode",{parentName:"li"},"UserLimitOrdersAll")," query.",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"address")," (string): The user address."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"pagination")," (cosmos.base.query.v1beta1.PageRequest): Pagination options.")))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Sample Query")),(0,a.kt)("p",null,"Curl Command (testnet):"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"curl https://rest-falcron.pion-1.ntrn.tech/neutron/dex/user/limit_orders/{address}\n")),(0,a.kt)("h3",{id:"tickliquidityall"},"TickLiquidityAll"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'GET "/neutron/dex/tick_liquidity/{pairID}/{tokenIn}"\n')),(0,a.kt)("p",null,"This query retrieves a list of ",(0,a.kt)("inlineCode",{parentName:"p"},"TickLiquidity")," items for a given pairID / TokenIn combination."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Proto Messages")),(0,a.kt)("p",null,"Request:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-protobuf"},"message QueryAllTickLiquidityRequest {\n  string pair_id = 1;\n  string token_in = 2;\n  cosmos.base.query.v1beta1.PageRequest pagination = 3;\n}\n")),(0,a.kt)("p",null,"Response:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-protobuf"},"message TickLiquidity {\n  oneof liquidity {\n    PoolReserves pool_reserves = 1;\n    LimitOrderTranche limit_order_tranche = 2;\n  }\n}\n\nmessage QueryAllTickLiquidityResponse {\n  repeated TickLiquidity tick_liquidity = 1 [(gogoproto.nullable) = true];\n  cosmos.base.query.v1beta1.PageResponse pagination = 2;\n}\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Arguments")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"QueryAllTickLiquidityRequest"),": Request message for the ",(0,a.kt)("inlineCode",{parentName:"li"},"TickLiquidityAll")," query.",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"pairID")," (string): The pair ID."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"tokenIn")," (string): The input token."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"pagination")," (cosmos.base.query.v1beta1.PageRequest): Pagination options.")))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Sample Query")),(0,a.kt)("p",null,"Curl Command (testnet):"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"curl https://rest-falcron.pion-1.ntrn.tech/neutron/dex/tick_liquidity/{pairID}/{tokenIn}\n")),(0,a.kt)("h3",{id:"inactivelimitordertranche"},"InactiveLimitOrderTranche"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'GET "/neutron/dex/filled_limit_order_tranche/{pairID}/{tokenIn}/{tickIndex}/{trancheKey}"\n')),(0,a.kt)("p",null,"This query retrieves an inactive ",(0,a.kt)("inlineCode",{parentName:"p"},"LimitOrderTranche")," by a tranche's key (pairID + tokenIn + tickIndex + trancheKey)."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Proto Messages")),(0,a.kt)("p",null,"Request:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-protobuf"},"message QueryGetInactiveLimitOrderTrancheRequest {\n  string pair_id = 1;\n  string token_in = 2;\n  int64 tick_index = 3;\n  string tranche_key = 4;\n}\n")),(0,a.kt)("p",null,"Response:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-protobuf"},"\nmessage QueryGetInactiveLimitOrderTrancheResponse {\n  LimitOrderTranche inactive_limit_order_tranche = 1 [(gogoproto.nullable) = true];\n}\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Arguments")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"QueryGetInactiveLimitOrderTrancheRequest"),": Request message for the ",(0,a.kt)("inlineCode",{parentName:"li"},"InactiveLimitOrderTranche")," query.",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"pairID")," (string): The pair ID."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"tokenIn")," (string): The input token."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"tickIndex")," (int64): The tick index."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"trancheKey")," (string): The tranche key.")))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Sample Query")),(0,a.kt)("p",null,"Curl Command (testnet):"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"curl https://rest-falcron.pion-1.ntrn.tech/neutron/dex/filled_limit_order_tranche/{pairID}/{tokenIn}/{tickIndex}/{trancheKey}\n")),(0,a.kt)("h3",{id:"inactivelimitordertrancheall"},"InactiveLimitOrderTrancheAll"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'GET "/neutron/dex/filled_limit_order_tranche"\n')),(0,a.kt)("p",null,"This query retrieves a list of inactive ",(0,a.kt)("inlineCode",{parentName:"p"},"LimitOrderTranche")," items."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Proto Messages")),(0,a.kt)("p",null,"Request:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-protobuf"},"message QueryAllInactiveLimitOrderTrancheRequest {\n  cosmos.base.query.v1beta1.PageRequest pagination = 1;\n}\n")),(0,a.kt)("p",null,"Response:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-protobuf"},"message QueryAllInactiveLimitOrderTrancheResponse {\n  repeated LimitOrderTranche inactive_limit_order_tranche = 1 [(gogoproto.nullable) = true];\n  cosmos.base.query.v1beta1.PageResponse pagination = 2;\n}\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Arguments")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"QueryAllInactiveLimitOrderTrancheRequest"),": Request message for the ",(0,a.kt)("inlineCode",{parentName:"li"},"InactiveLimitOrderTrancheAll")," query.",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"pagination")," (cosmos.base.query.v1beta1.PageRequest): Pagination options.")))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Sample Query")),(0,a.kt)("p",null,"Curl Command (testnet):"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"curl https://rest-falcron.pion-1.ntrn.tech/neutron/dex/filled_limit_order_tranche\n")),(0,a.kt)("h3",{id:"poolreservesall"},"PoolReservesAll"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'GET "/neutron/dex/pool_reserves/{pairID}/{tokenIn}"\n')),(0,a.kt)("p",null,"This query retrieves a list of ",(0,a.kt)("inlineCode",{parentName:"p"},"PoolReserves")," items for a given pairID / TokenIn combination."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Proto Messages")),(0,a.kt)("p",null,"Request:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-protobuf"},"message QueryAllPoolReservesRequest {\n  string pair_id = 1;\n  string token_in = 2;\n  cosmos.base.query.v1beta1.PageRequest pagination = 3;\n}\n")),(0,a.kt)("p",null,"Response:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-protobuf"},"message QueryAllPoolReservesResponse {\n  repeated PoolReserves pool_reserves = 1 [(gogoproto.nullable) = true];\n  cosmos.base.query.v1beta1.PageResponse pagination = 2;\n}\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Arguments")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"QueryAllPoolReservesRequest"),": Request message for the ",(0,a.kt)("inlineCode",{parentName:"li"},"PoolReservesAll")," query.",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"pairID")," (string): The pair ID."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"tokenIn")," (string): The input token."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"pagination")," (cosmos.base.query.v1beta1.PageRequest): Pagination options.")))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Sample Query")),(0,a.kt)("p",null,"Curl Command (testnet):"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"curl https://rest-falcron.pion-1.ntrn.tech/neutron/dex/pool_reserves/{pairID}/{tokenIn}\n")),(0,a.kt)("h3",{id:"poolreserves"},"PoolReserves"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'GET "/neutron/dex/pool_reserves/{pairID}/{tokenIn}/{tickIndex}/{fee}"\n')),(0,a.kt)("p",null,"This query retrieves a ",(0,a.kt)("inlineCode",{parentName:"p"},"PoolReserves")," by PoolReservesKey (PairID+TokenIn+TickIndex+Fee)."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Proto Messages")),(0,a.kt)("p",null,"Request:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-protobuf"},"message QueryGetPoolReservesRequest {\n  string pair_id = 1;\n  string token_in = 2;\n  int64 tick_index = 3;\n  uint64 fee = 4;\n}\n")),(0,a.kt)("p",null,"Response:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-protobuf"},"message QueryGetPoolReservesResponse {\n  PoolReserves pool_reserves = 1 [(gogoproto.nullable) = true];\n}\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Arguments")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"QueryGetPoolReservesRequest"),": Request message for the ",(0,a.kt)("inlineCode",{parentName:"li"},"PoolReserves")," query.",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"pairID")," (string): The pair ID."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"tokenIn")," (string): The input token."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"tickIndex")," (int64): The tick index."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"fee")," (uint64): The fee.")))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Sample Query")),(0,a.kt)("p",null,"Curl Command (testnet):"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"curl https://rest-falcron.pion-1.ntrn.tech/neutron/dex/pool_reserves/{pairID}/{tokenIn}/{tickIndex}/{fee}\n")),(0,a.kt)("h3",{id:"queryestimatemultihopswap"},"QueryEstimateMultiHopSwap"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'GET "/neutron/dex/estimate_multi_hop_swap"\n')),(0,a.kt)("p",null,"Queries the simulated result of a multihop swap"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Proto Messages")),(0,a.kt)("p",null,"Request: "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-protobuf"},'message QueryEstimateMultiHopSwapRequest {\n  string creator = 1;\n  string receiver = 2;\n  repeated MultiHopRoute routes = 3;\n  string amount_in = 4 [\n    (gogoproto.moretags) = "yaml:\\"amount_in\\"",\n    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",\n    (gogoproto.nullable) = false,\n    (gogoproto.jsontag) = "amount_in"\n  ];\n  string exit_limit_price = 5 [\n    (gogoproto.moretags) = "yaml:\\"exit_limit_price\\"",\n    (gogoproto.customtype) = "github.com/neutron-org/neutron/v2/utils/math.PrecDec",\n    (gogoproto.nullable) = false,\n    (gogoproto.jsontag) = "exit_limit_price"\n  ];\n\n  // If pickBestRoute == true then all routes are run and the route with the\n  // best price is chosen otherwise, the first succesful route is used.\n  bool pick_best_route = 6;\n}\n\nmessage MultiHopRoute {\n  repeated string hops = 1;\n}\n')),(0,a.kt)("p",null,"Response:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-protobuf"},'message QueryEstimateMultiHopSwapResponse {\n  cosmos.base.v1beta1.Coin coin_out = 1 [\n    (gogoproto.nullable) = false,\n    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Coin",\n    (gogoproto.jsontag) = "coin_out"\n  ];\n}\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Arguments")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"QueryEstimateMultiHopSwapRequest"),": Request message for the ",(0,a.kt)("inlineCode",{parentName:"li"},"EstimateMultiHopSwap")," query.",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"creator")," (string): creator."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"receiver")," (string): receiver."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"MultiHopRoute")," ([]MultiHopeRoute):  Array of possible routes."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"AmountIn")," (sdk.Int): Amount of TokenIn to swap."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"ExitLimitPrice")," (sdk.Dec): Minimum price that must be satisfied for a route to succeed."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"PickBestRoute")," (bool): When true, all routes are run and the route with the best price is used.")))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Sample Query")),(0,a.kt)("p",null,"Curl Command (testnet):"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"curl https://rest-falcron.pion-1.ntrn.tech/neutron/dex/estimate_multi_hop_swap\n")),(0,a.kt)("h3",{id:"estimateplacelimitorder"},"EstimatePlaceLimitOrder"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'GET "/neutron/dex/estimate_place_limit_order"\n')),(0,a.kt)("p",null,"Queries the simulated result of a limit order placement."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Proto Messages")),(0,a.kt)("p",null,"Request: "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-protobuf"},'message QueryEstimatePlaceLimitOrderRequest {\n  string creator = 1;\n  string receiver = 2;\n  string token_in = 3;\n  string token_out = 4;\n  int64 tick_index_in_to_out = 5;\n  string amount_in = 6 [\n    (gogoproto.moretags) = "yaml:\\"amount_in\\"",\n    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",\n    (gogoproto.nullable) = false,\n    (gogoproto.jsontag) = "amount_in"\n  ];\n  LimitOrderType order_type = 7;\n\n  // expirationTime is only valid iff orderType == GOOD_TIL_TIME.\n  google.protobuf.Timestamp expiration_time = 8 [\n    (gogoproto.stdtime) = true,\n    (gogoproto.nullable) = true\n  ];\n  string maxAmount_out = 9 [\n    (gogoproto.moretags) = "yaml:\\"max_amount_out\\"",\n    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",\n    (gogoproto.nullable) = true,\n    (gogoproto.jsontag) = "max_amount_out"\n  ];\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-protobuf"},"enum LimitOrderType{\n  GOOD_TIL_CANCELLED = 0;\n  FILL_OR_KILL = 1;\n  IMMEDIATE_OR_CANCEL = 2;\n  JUST_IN_TIME = 3;\n  GOOD_TIL_TIME = 4;\n}\n")),(0,a.kt)("p",null,"Response:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-protobuf"},'message QueryEstimatePlaceLimitOrderResponse {\n  // Total amount of coin used for the limit order\n  // You can derive makerLimitInCoin using the equation: totalInCoin =\n  // swapInCoin + makerLimitInCoin\n  cosmos.base.v1beta1.Coin total_in_coin = 1 [\n    (gogoproto.moretags) = "yaml:\\"total_in_coin\\"",\n    (gogoproto.nullable) = false,\n    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Coin",\n    (gogoproto.jsontag) = "total_in_coin"\n  ];\n\n  // Total amount of the token in that was immediately swapped for swapOutCoin\n  cosmos.base.v1beta1.Coin swap_in_coin = 2 [\n    (gogoproto.moretags) = "yaml:\\"swap_in_coin\\"",\n    (gogoproto.nullable) = false,\n    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Coin",\n    (gogoproto.jsontag) = "swap_in_coin"\n  ];\n\n  // Total amount of coin received from the taker portion of the limit order\n  // This is the amount of coin immediately available in the users account after\n  // executing the limit order. It does not include any future proceeds from the\n  // maker portion which will have withdrawn in the future\n  cosmos.base.v1beta1.Coin swap_out_coin = 3 [\n    (gogoproto.moretags) = "yaml:\\"swap_out_coin\\"",\n    (gogoproto.nullable) = false,\n    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Coin",\n    (gogoproto.jsontag) = "swap_out_coin"\n  ];\n}\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Arguments")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"QueryEstimatePlaceLimitOrderRequest"),": Request message for the ",(0,a.kt)("inlineCode",{parentName:"li"},"EstimatePlaceLimitOrder")," query.",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Creator")," string (sdk.AccAddress): Account from which TokenIn is debited."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Receiver")," string (sdk.AccAddress): Account to which TokenOut is credited or that will be allowed to withdraw or cancel a maker order."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"TokenIn")," (string): Token being \u201csold\u201d."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"TokenOut")," (string): Token being \u201cbought\u201d."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"TickIndex")," (int64): Limit tick for a limit order, specified in terms of TokenIn to TokenOut."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"AmountIn")," (sdk.Int): Amount of TokenIn to be traded."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"OrderType")," (orderType): Type of limit order to be used. Must be one of: GOOD","_","TIL","_","CANCELLED, FILL","_","OR","_","KILL, IMMEDIATE","_","OR","_","CANCEL, JUST","_","IN","_","TIME, or GOOD","_","TIL","_","TIME."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"ExpirationTime")," (time.Time): Expiration time for order. Only valid for GOOD","_","TIL","_","TIME limit orders.")))),(0,a.kt)("p",null,"Curl Command (testnet):"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"curl https://rest-falcron.pion-1.ntrn.tech/neutron/dex/estimate_place_limit_order\n")),(0,a.kt)("h3",{id:"poolrequest"},"PoolRequest"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'GET "/neutron/dex/pool/{pair_id}/{tick_index}/{fee}"\n')),(0,a.kt)("p",null,"Queries a pool by pair, tick and fee"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Proto Messages")),(0,a.kt)("p",null,"Request: "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-protobuf"},"message QueryPoolRequest {\n  string pair_id = 1;\n  int64 tick_index = 2;\n  uint64 fee = 3;\n}\n")),(0,a.kt)("p",null,"Response:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-protobuf"},"message Pool {\n  uint64 id = 1;\n  PoolReserves lower_tick0 = 2;\n  PoolReserves upper_tick1 = 3;\n}\n\nmessage QueryPoolResponse {\n  Pool pool = 1 [(gogoproto.nullable) = true];\n}\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Arguments")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"QueryPoolRequest"),": Request message for the ",(0,a.kt)("inlineCode",{parentName:"li"},"PoolRequest")," query.",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"pairID")," (string): The pair ID."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"tickIndex")," (int64): The tick index."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"fee")," (uint64): fee.")))),(0,a.kt)("p",null,"Curl Command (testnet):"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"curl https://rest-falcron.pion-1.ntrn.tech/neutron/dex/pool/{pair_id}/{tick_index}/{fee}\n")),(0,a.kt)("h3",{id:"poolrequestbyid"},"PoolRequestByID"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'GET "/neutron/dex/pool/{pool_id}"\n')),(0,a.kt)("p",null,"Queries a pool by ID"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Proto Messages")),(0,a.kt)("p",null,"Request:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-protobuf"},"message QueryPoolByIDRequest {\n  uint64 pool_id = 1;\n}\n")),(0,a.kt)("p",null,"Response:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-protobuf"},"message QueryPoolResponse {\n  Pool pool = 1 [(gogoproto.nullable) = true];\n}\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Arguments")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"QueryPoolByIDRequest"),": Request message for the ",(0,a.kt)("inlineCode",{parentName:"li"},"PoolRequestByID")," query.",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"id")," (uint64): Pool ID.")))),(0,a.kt)("p",null,"Curl Command (testnet):"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"curl https://rest-falcron.pion-1.ntrn.tech/neutron/dex/pool/{pool_id}\n")),(0,a.kt)("h3",{id:"getpoolmetadata"},"GetPoolMetadata"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'GET "/neutron/dex/pool_metadata/{id}"\n')),(0,a.kt)("p",null,"Queries a PoolMetadata by ID"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Proto Messages"),":\nRequest: "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-protobuf"},"message QueryGetPoolMetadataRequest {\n  uint64 id = 1;\n}\n")),(0,a.kt)("p",null,"Response: "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-protobuf"},"message PoolMetadata {\n  uint64 id = 1;\n  int64 tick = 2;\n  uint64 fee = 3;\n  PairID pair_id = 4;\n}\nmessage PairID {\n  string token0 = 1;\n  string token1 = 2;\n}\n\nmessage QueryGetPoolMetadataResponse {\n  PoolMetadata Pool_metadata = 1 [(gogoproto.nullable) = false];\n}\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Arguments")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"QueryGetPoolMetadataRequest"),": Request message for the ",(0,a.kt)("inlineCode",{parentName:"li"},"GetPoolMetadata")," query.",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"id")," (uint64): Pool ID.")))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"curl /neutron/dex/pool_metadata/{id}\n")),(0,a.kt)("h3",{id:"getallpoolmetadata"},"GetALLPoolMetadata"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'GET "/neutron/dex/pool_metadata"\n')),(0,a.kt)("p",null,"Queries a list of PoolMetadata items"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Proto Messages"),":"),(0,a.kt)("p",null,"Request:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-protobuf"},"message QueryAllPoolMetadataRequest {\n  cosmos.base.query.v1beta1.PageRequest pagination = 1;\n}\n")),(0,a.kt)("p",null,"Response:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-protobuf"},"message QueryAllPoolMetadataResponse {\n  repeated PoolMetadata pool_metadata = 1 [(gogoproto.nullable) = false];\n  cosmos.base.query.v1beta1.PageResponse pagination = 2;\n}\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Arguments")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"QueryAllPoolMetadataRequest"),": Request message for the ",(0,a.kt)("inlineCode",{parentName:"li"},"GetALLPoolMetadata")," query.",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"pagination")," (cosmos.base.query.v1beta1.PageRequest): Pagination options.")))),(0,a.kt)("p",null,"Curl Command (testnet):"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"curl https://rest-falcron.pion-1.ntrn.tech/neutron/dex/pool_metadata\n")))}k.isMDXComponent=!0}}]);