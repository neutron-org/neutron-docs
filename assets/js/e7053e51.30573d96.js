"use strict";(self.webpackChunkneutron=self.webpackChunkneutron||[]).push([[25763],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>g});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=r.createContext({}),c=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},d=function(e){var n=c(e.components);return r.createElement(l.Provider,{value:n},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=c(t),m=o,g=u["".concat(l,".").concat(m)]||u[m]||p[m]||a;return t?r.createElement(g,i(i({ref:n},d),{},{components:t})):r.createElement(g,i({ref:n},d))}));function g(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=m;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[u]="string"==typeof e?e:o,i[1]=s;for(var c=2;c<a;c++)i[c]=t[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},86453:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var r=t(87462),o=(t(67294),t(3905));const a={},i="Messages",s={unversionedId:"neutron/token-generation-event/airdrop/messages",id:"version-1.0/neutron/token-generation-event/airdrop/messages",title:"Messages",description:"InstantiateMsg",source:"@site/versioned_docs/version-1.0/neutron/token-generation-event/airdrop/messages.md",sourceDirName:"neutron/token-generation-event/airdrop",slug:"/neutron/token-generation-event/airdrop/messages",permalink:"/1.0/neutron/token-generation-event/airdrop/messages",draft:!1,tags:[],version:"1.0",frontMatter:{},sidebar:"docs",previous:{title:"Overview",permalink:"/1.0/neutron/token-generation-event/airdrop/overview"},next:{title:"Queries",permalink:"/1.0/neutron/token-generation-event/airdrop/queries"}},l={},c=[{value:"InstantiateMsg",id:"instantiatemsg",level:2},{value:"ExecuteMsg",id:"executemsg",level:2},{value:"<code>Instantiate</code>",id:"instantiate",level:2},{value:"<code>Execute</code>",id:"execute",level:2},{value:"<code>claim</code>",id:"claim",level:3},{value:"<code>withdraw_all</code>",id:"withdraw_all",level:3},{value:"<code>pause</code>",id:"pause",level:3},{value:"<code>resume</code>",id:"resume",level:3}],d={toc:c},u="wrapper";function p(e){let{components:n,...t}=e;return(0,o.kt)(u,(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"messages"},"Messages"),(0,o.kt)("h2",{id:"instantiatemsg"},"InstantiateMsg"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-rust"},'pub struct InstantiateMsg {\n    pub credits_address: String,\n    pub reserve_address: String,\n    /// MerkleRoot is hex-encoded merkle root.\n    pub merkle_root: String,\n    /// A point in time from which it is possible to claim airdrops\n    pub airdrop_start: u64,\n    /// A point in time from which a vesting is configured for cNTRNs. At this point, it is still\n    /// possible for users to claim their airdrops.\n    pub vesting_start: u64,\n    /// Total duration of vesting. At `vesting_start.seconds() + vesting_duration_seconds`\n    /// point of time it is no longer possible to claim airdrops. At the very same point of time,\n    /// it is possible to withdraw all remaining cNTRNs, exchange them for NTRNs and send to\n    /// reserve, using `[ExecuteMsg::WithdrawAll]` message\n    pub vesting_duration_seconds: u64,\n    pub total_amount: Option<Uint128>,\n    /// hrp is the bech32 parameter required for building external network address\n    /// from signature message during claim action. example "cosmos", "terra", "juno"\n    pub hrp: Option<String>,\n}\n')),(0,o.kt)("h2",{id:"executemsg"},"ExecuteMsg"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-rust"},"pub enum ExecuteMsg {\n    /// Claim does not check if contract has enough funds, owner must ensure it.\n    Claim {\n        amount: Uint128,\n        /// Proof is hex-encoded merkle proof.\n        proof: Vec<String>,\n    },\n    /// Permissionless, activated after vesting is over (consult to `[InstantiateMsg]`\n    /// documentation for more info). Withdraws all remaining cNTRN tokens, burns them,\n    /// receiving NTRN in exchange, and sends all received NTRN's to reserve.\n    WithdrawAll {},\n    Pause {},\n    Resume {},\n}\n")),(0,o.kt)("h1",{id:"examples"},"Examples"),(0,o.kt)("h2",{id:"instantiate"},(0,o.kt)("inlineCode",{parentName:"h2"},"Instantiate")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  // Address of the Credits contract\n  "credits_address": "neutron...",\n  // Address of the Reserve contract\n  "reserve_address": "neutron...",\n  /// MerkleRoot is hex-encoded merkle root.\n  "merkle_root": "deadbeef",\n  /// A point in time from which it is possible to claim airdrops\n  "airdrop_start": 100,\n  /// A point in time from which a vesting is configured for cNTRNs. At this point, it is still\n  /// possible for users to claim their airdrops.\n  "vesting_start": 100,\n  /// Total duration of vesting. At `vesting_start.seconds() + vesting_duration_seconds`\n  /// point of time it is no longer possible to claim airdrops. At the very same point of time,\n  /// it is possible to withdraw all remaining cNTRNs, exchange them for NTRNs and send to\n  /// reserve, using `[ExecuteMsg::WithdrawAll]` message\n  "vesting_duration_seconds": 100,\n  // Total amount of tokens to be airdropped\n  "total_amount": "10000",\n  /// hrp is the bech32 parameter required for building external network address\n  /// from signature message during claim action. example "cosmos", "terra", "juno"\n  "hrp": "neutron"\n}\n')),(0,o.kt)("h2",{id:"execute"},(0,o.kt)("inlineCode",{parentName:"h2"},"Execute")),(0,o.kt)("h3",{id:"claim"},(0,o.kt)("inlineCode",{parentName:"h3"},"claim")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "claim": {\n    // Amount to claim\n    "amount": "1000",\n    /// Proof is hex-encoded merkle proof.\n    "proof": ["dead", "beef"]\n  }\n}\n')),(0,o.kt)("p",null,"Claims airdropped tokens."),(0,o.kt)("h3",{id:"withdraw_all"},(0,o.kt)("inlineCode",{parentName:"h3"},"withdraw_all")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "withdraw_all": {}\n}\n')),(0,o.kt)("p",null,"Permissionless. Withdraws all remaining cNTRN tokens, burns them, receiving NTRN in exchange, and sends all received NTRN's to reserve."),(0,o.kt)("h3",{id:"pause"},(0,o.kt)("inlineCode",{parentName:"h3"},"pause")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "pause": {}\n}\n')),(0,o.kt)("p",null,"Sets the Airdrop contract on pause. Only the owner can call this method."),(0,o.kt)("h3",{id:"resume"},(0,o.kt)("inlineCode",{parentName:"h3"},"resume")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "unpause": {}\n}\n')),(0,o.kt)("p",null,"Unpauses the Airdrop contract. Only the owner can call this method."))}p.isMDXComponent=!0}}]);